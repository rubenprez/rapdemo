{"version":3,"sources":["js/main.js"],"names":["window","onload","AudioContext","webkitAudioContext","audioContext","canvas","document","getElementById","canvasContext","getContext","drawWaveform","analyser","WIDTH","width","HEIGHT","height","bufferLength","frequencyBinCount","dataArray","Uint8Array","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","audioElements","querySelectorAll","analysers","forEach","audio","createAnalyser","fftSize","audioSource","createMediaElementSource","connect","destination","push","updateWaveform","requestAnimationFrame","currentPhotoIndex","photos","showPhoto","index","photo","idx","classList","add","remove","nextPhoto","length","prevPhoto"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["// JavaScript for audio waveform visualizer\nwindow.onload = function() {\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const audioContext = new AudioContext();\n  const canvas = document.getElementById('waveform');\n  const canvasContext = canvas.getContext('2d');\n\n  function drawWaveform(analyser) {\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    analyser.getByteTimeDomainData(dataArray);\n\n    canvasContext.fillStyle = 'rgba(255, 255, 255, 0.1)';\n    canvasContext.fillRect(0, 0, WIDTH, HEIGHT);\n\n    canvasContext.lineWidth = 2;\n    canvasContext.strokeStyle = 'rgb(103, 177, 246)';\n    canvasContext.beginPath();\n\n    const sliceWidth = WIDTH * 1.0 / bufferLength;\n    let x = 0;\n\n    for(let i = 0; i < bufferLength; i++) {\n      const v = dataArray[i] / 128.0;\n      const y = v * HEIGHT/2;\n\n      if(i === 0) {\n        canvasContext.moveTo(x, y);\n      } else {\n        canvasContext.lineTo(x, y);\n      }\n\n      x += sliceWidth;\n    }\n\n    canvasContext.lineTo(canvas.width, canvas.height/2);\n    canvasContext.stroke();\n  }\n\n  // Create an analyser node for each audio element\n  const audioElements = document.querySelectorAll('audio');\n  const analysers = [];\n\n  audioElements.forEach(audio => {\n    const analyser = audioContext.createAnalyser();\n    analyser.fftSize = 256;\n\n    const audioSource = audioContext.createMediaElementSource(audio);\n    audioSource.connect(analyser);\n    audioSource.connect(audioContext.destination);\n\n    analysers.push(analyser);\n  });\n\n  // Start drawing the waveform for each analyser\n  function updateWaveform() {\n    analysers.forEach(analyser => {\n      drawWaveform(analyser);\n    });\n    requestAnimationFrame(updateWaveform);\n  }\n  \n  updateWaveform();\n};\n\n\n\nlet currentPhotoIndex = 0;\nconst photos = document.querySelectorAll('.photo');\n\nfunction showPhoto(index) {\n    photos.forEach((photo, idx) => {\n        if (idx === index) {\n            photo.classList.add('active');\n        } else {\n            photo.classList.remove('active');\n        }\n    });\n}\n\nfunction nextPhoto() {\n    currentPhotoIndex = (currentPhotoIndex + 1) % photos.length;\n    showPhoto(currentPhotoIndex);\n}\n\nfunction prevPhoto() {\n    currentPhotoIndex = (currentPhotoIndex - 1 + photos.length) % photos.length;\n    showPhoto(currentPhotoIndex);\n}\n\n// Show the first photo initially\nshowPhoto(currentPhotoIndex);\n\n"]}