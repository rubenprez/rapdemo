{"mappings":"AAAA,2CAA2C;AAC3C,OAAO,MAAM,GAAG;IACd,MAAM,eAAe,OAAO,YAAY,IAAI,OAAO,kBAAkB;IACrE,MAAM,eAAe,IAAI;IACzB,MAAM,SAAS,SAAS,cAAc,CAAC;IACvC,MAAM,gBAAgB,OAAO,UAAU,CAAC;IAExC,SAAS,aAAa,QAAQ;QAC5B,MAAM,QAAQ,OAAO,KAAK;QAC1B,MAAM,SAAS,OAAO,MAAM;QAE5B,MAAM,eAAe,SAAS,iBAAiB;QAC/C,MAAM,YAAY,IAAI,WAAW;QAEjC,SAAS,qBAAqB,CAAC;QAE/B,cAAc,SAAS,GAAG;QAC1B,cAAc,QAAQ,CAAC,GAAG,GAAG,OAAO;QAEpC,cAAc,SAAS,GAAG;QAC1B,cAAc,WAAW,GAAG;QAC5B,cAAc,SAAS;QAEvB,MAAM,aAAa,QAAQ,MAAM;QACjC,IAAI,IAAI;QAER,IAAI,IAAI,IAAI,GAAG,IAAI,cAAc,IAAK;YACpC,MAAM,IAAI,SAAS,CAAC,EAAE,GAAG;YACzB,MAAM,IAAI,IAAI,SAAO;YAErB,IAAG,MAAM,GACP,cAAc,MAAM,CAAC,GAAG;iBAExB,cAAc,MAAM,CAAC,GAAG;YAG1B,KAAK;QACP;QAEA,cAAc,MAAM,CAAC,OAAO,KAAK,EAAE,OAAO,MAAM,GAAC;QACjD,cAAc,MAAM;IACtB;IAEA,iDAAiD;IACjD,MAAM,gBAAgB,SAAS,gBAAgB,CAAC;IAChD,MAAM,YAAY,EAAE;IAEpB,cAAc,OAAO,CAAC,CAAA;QACpB,MAAM,WAAW,aAAa,cAAc;QAC5C,SAAS,OAAO,GAAG;QAEnB,MAAM,cAAc,aAAa,wBAAwB,CAAC;QAC1D,YAAY,OAAO,CAAC;QACpB,YAAY,OAAO,CAAC,aAAa,WAAW;QAE5C,UAAU,IAAI,CAAC;IACjB;IAEA,+CAA+C;IAC/C,SAAS;QACP,UAAU,OAAO,CAAC,CAAA;YAChB,aAAa;QACf;QACA,sBAAsB;IACxB;IAEA;AACF;AAIA,IAAI,oBAAoB;AACxB,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAEzC,SAAS,UAAU,KAAK;IACpB,OAAO,OAAO,CAAC,CAAC,OAAO;QACnB,IAAI,QAAQ,OACR,MAAM,SAAS,CAAC,GAAG,CAAC;aAEpB,MAAM,SAAS,CAAC,MAAM,CAAC;IAE/B;AACJ;AAEA,SAAS;IACL,oBAAoB,AAAC,CAAA,oBAAoB,CAAA,IAAK,OAAO,MAAM;IAC3D,UAAU;AACd;AAEA,SAAS;IACL,oBAAoB,AAAC,CAAA,oBAAoB,IAAI,OAAO,MAAM,AAAD,IAAK,OAAO,MAAM;IAC3E,UAAU;AACd;AAEA,iCAAiC;AACjC,UAAU","sources":["js/main.js"],"sourcesContent":["// JavaScript for audio waveform visualizer\nwindow.onload = function() {\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const audioContext = new AudioContext();\n  const canvas = document.getElementById('waveform');\n  const canvasContext = canvas.getContext('2d');\n\n  function drawWaveform(analyser) {\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    analyser.getByteTimeDomainData(dataArray);\n\n    canvasContext.fillStyle = 'rgba(255, 255, 255, 0.1)';\n    canvasContext.fillRect(0, 0, WIDTH, HEIGHT);\n\n    canvasContext.lineWidth = 2;\n    canvasContext.strokeStyle = 'rgb(103, 177, 246)';\n    canvasContext.beginPath();\n\n    const sliceWidth = WIDTH * 1.0 / bufferLength;\n    let x = 0;\n\n    for(let i = 0; i < bufferLength; i++) {\n      const v = dataArray[i] / 128.0;\n      const y = v * HEIGHT/2;\n\n      if(i === 0) {\n        canvasContext.moveTo(x, y);\n      } else {\n        canvasContext.lineTo(x, y);\n      }\n\n      x += sliceWidth;\n    }\n\n    canvasContext.lineTo(canvas.width, canvas.height/2);\n    canvasContext.stroke();\n  }\n\n  // Create an analyser node for each audio element\n  const audioElements = document.querySelectorAll('audio');\n  const analysers = [];\n\n  audioElements.forEach(audio => {\n    const analyser = audioContext.createAnalyser();\n    analyser.fftSize = 256;\n\n    const audioSource = audioContext.createMediaElementSource(audio);\n    audioSource.connect(analyser);\n    audioSource.connect(audioContext.destination);\n\n    analysers.push(analyser);\n  });\n\n  // Start drawing the waveform for each analyser\n  function updateWaveform() {\n    analysers.forEach(analyser => {\n      drawWaveform(analyser);\n    });\n    requestAnimationFrame(updateWaveform);\n  }\n  \n  updateWaveform();\n};\n\n\n\nlet currentPhotoIndex = 0;\nconst photos = document.querySelectorAll('.photo');\n\nfunction showPhoto(index) {\n    photos.forEach((photo, idx) => {\n        if (idx === index) {\n            photo.classList.add('active');\n        } else {\n            photo.classList.remove('active');\n        }\n    });\n}\n\nfunction nextPhoto() {\n    currentPhotoIndex = (currentPhotoIndex + 1) % photos.length;\n    showPhoto(currentPhotoIndex);\n}\n\nfunction prevPhoto() {\n    currentPhotoIndex = (currentPhotoIndex - 1 + photos.length) % photos.length;\n    showPhoto(currentPhotoIndex);\n}\n\n// Show the first photo initially\nshowPhoto(currentPhotoIndex);\n\n"],"names":[],"version":3,"file":"electronics.72be8890.js.map","sourceRoot":"/__parcel_source_root/"}